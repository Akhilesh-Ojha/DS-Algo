class Node {
    constructor(val) {
        this.val = val;
        this.next = null;
    }
}

class singlyLinkedList {
    constructor() {
        this.head = null;
        this.tail = null;
        this.length = 0;
    }

    push(val) {
        let newNode = new Node(val);
        if(this.length === 0) {
            this.head = newNode;
            this.tail = newNode;
            this.length++;
        } else {
            this.tail.next = newNode;
            this.tail = newNode;
            this.length++;
        }
    }

    pop() {
        if(this.length === 0) {
            return "List is empty";
        } else {
            let current = this.head;
            let newTail = this.head
            while (current.next !== null) {
                newTail = current;
                current = current.next;
            }
            this.tail = newTail;
            this.tail.next = null;
            this.length--;
            if(this.length === 0) {
                this.head = null;
                this.tail = null;
            }
            console.log('Poped Item', current);
            return current;
        }
    }

}

let list = new singlyLinkedList();
list.push(20);
list.push(30);
list.push(40);
list.push(50);

// list.pop();

// list.traverse();
//     traverse() {
//         let current = this.head;
//         while(current) {
//             console.log(current);
//             current = current.next;
//         }
//     }
console.log(list);